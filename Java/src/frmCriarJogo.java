

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmCriarJogo.java
 *
 * Created on 22/07/2014, 10:04:57
 */
/**
 *
 * @author gkaustchr
 */
public class frmCriarJogo extends javax.swing.JFrame {
    Timer timer;
    NovoJogo novoJogo;
    Jogo jogo;
    JFrame formJogo; 

    /** Creates new form frmCriarJogo */
    public frmCriarJogo() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtIp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaEndereços = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Jogo do Nim - Criando novo jogo");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel1.setText("Seu IP");

        txtIp.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        txtIp.setText("192.168.000.001");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jLabel2.setText("Servidor criado, aguardando conexões");

        txaEndereços.setColumns(20);
        txaEndereços.setRows(5);
        jScrollPane1.setViewportView(txaEndereços);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    
    /*
    HostName: 127.0.0.1 IP: 127.0.0.1
    HostName: 0:0:0:0:0:0:0:1 IP: 0:0:0:0:0:0:0:1
    HostName: gkaustchr-PC IP: 192.168.0.102
    HostName: gkaustchr-PC IP: fe80:0:0:0:c43e:6274:3d6e:a3ae%11
    HostName: fe80:0:0:0:4162:2587:9b6a:4f63%12 IP: fe80:0:0:0:4162:2587:9b6a:4f63%12
    */
    
    Enumeration e = null; 
        try {
            e = NetworkInterface.getNetworkInterfaces();
        } catch (SocketException ex) {
            Logger.getLogger(frmCriarJogo.class.getName()).log(Level.SEVERE, null, ex);
        }
    while (e.hasMoreElements()) { 
         NetworkInterface i = (NetworkInterface) e.nextElement(); 
         Enumeration ds = i.getInetAddresses(); 
         while (ds.hasMoreElements()) { 
            InetAddress myself = (InetAddress) ds.nextElement();
            System.out.println("HostName: " + myself.getHostName() + " IP: " + myself.getHostAddress()); 
            txaEndereços.setText( txaEndereços.getText() + "HostName: " + myself.getHostName() + " IP: " + myself.getHostAddress()+ "\n");
         } 
    }
    

    novoJogo = new NovoJogo();
    novoJogo.start();
    //Thread t_novoJogo = novoJogo;
    //t_novoJogo.start();
    
    try {
        Thread.currentThread().sleep(2000);
    } catch (InterruptedException ex) {
        Logger.getLogger(frmCriarJogo.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    
    jogo = new Jogo("127.0.0.1");
    jogo.start();
    //Thread t_jogo = jogo;
    //t_jogo.start();
    
    reminder(3);
    
    
}//GEN-LAST:event_formWindowOpened

public void fechar( ) {
    this.dispose();
}

public void reminder(int seconds) {
    timer = new Timer();
    timer.schedule(new RemindTask(), seconds*1000);
}  

class RemindTask extends TimerTask {
    public void run() {

        //System.out.println("Time's up!");
        //timer.cancel(); //Terminate the timer thread
        
        System.out.println("<TIMER>");
        /*
        if ( novoJogo.servidor.jogoIniciado == true ) {
            System.out.println("<TIMER> Ok :)");
        
            new frmJogo(jogo).setVisible(true);

            timer.cancel();
            // this.dispose();
        }
        */
        if ( jogo.cliente.jogoIniciado == true ) {
            formJogo = new frmJogo(jogo);
            formJogo.setVisible(true);
            
            timer.cancel();
            
            while (true) {
                if ( !formJogo.isVisible() )
                    fechar();
                
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmCriarJogo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            // this.dispose();
         } else {        
            reminder(3);
        }
        
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCriarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCriarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCriarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCriarJogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new frmCriarJogo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txaEndereços;
    private javax.swing.JTextField txtIp;
    // End of variables declaration//GEN-END:variables
}
